---

- hosts: server_emulator
  become: true

  vars:
  - tmp_file_path: /tmp/failed.txt

  tasks:
    - file:
        path: "{{ tmp_file_path }}"
        state: touch
      changed_when: False


- hosts: leaf[1]:spine
  become: true
  tasks:
    - name: Take backup of Quagga.conf
      copy:
        src: /etc/quagga/Quagga.conf
        dest: /etc/quagga/Quagga.conf.bck
        remote_src: true
        owner: root
        group: root
        mode: 0644


#- hosts: leaf[0]
#  become: true
#  tasks:
#    - name: Add bgp config in quagga.conf
#      blockinfile:
#        path: /etc/quagga/Quagga.conf
#        insertafter: "interface lo"
#        backup: yes
#        marker: ""
#        block: |
#          !
#          router bgp {{ ibgp_as }}
#            bgp router-id {{ ansible_ssh_host }}
#            neighbor {{ invader31_neighbour_ip }} remote-as {{ ibgp_as }}
#            neighbor {{ invader32_bgp_ip }} remote-as {{ ibgp_as }}
#            network {{ invader29_network }}
#
#    - name: Restart quagga
#      command: service quagga restart
#
#    - name: Verify bgp neighbors
#      command: "vtysh -c 'sh ip bgp'"
#      register: leaf0_out
   

- hosts: leaf[1]
  become: true
  tasks:
    - name: Add bgp config in quagga.conf
      blockinfile:
        path: /etc/quagga/Quagga.conf
        insertafter: "interface lo"
        backup: yes
        marker: ""
        block: |
          !
          router bgp {{ ibgp_as }}
            bgp router-id {{ ansible_ssh_host }}
            neighbor {{ invader32_neighbour_ip }} remote-as {{ ibgp_as }}
            neighbor {{ invader31_bgp_ip }} remote-as {{ ibgp_as }}
            network {{ invader30_network }}

    - name: Restart quagga
      command: service quagga restart


- hosts: spine[0]
  become: true
  tasks:
    - name: Add bgp config in quagga.conf
      blockinfile:
        path: /etc/quagga/Quagga.conf
        insertafter: "interface lo"
        backup: yes
        marker: ""
        block: |
          !
          router bgp {{ ibgp_as }}
            bgp router-id {{ ansible_ssh_host }}
            neighbor {{ invader29_neighbour_ip }} remote-as {{ ibgp_as }}
            neighbor {{ invader30_bgp_ip }} remote-as {{ ibgp_as }}
            network {{ invader31_network }}

    - name: Restart quagga
      command: service quagga restart


- hosts: spine[1]
  become: true
  tasks:
    - name: Add bgp config in quagga.conf
      blockinfile:
        path: /etc/quagga/Quagga.conf
        insertafter: "interface lo"
        backup: yes
        marker: ""
        block: |
          !
          router bgp {{ ibgp_as }}
            bgp router-id {{ ansible_ssh_host }}
            neighbor {{ invader30_neighbour_ip }} remote-as {{ ibgp_as }}
            neighbor {{ invader29_bgp_ip }} remote-as {{ ibgp_as }}
            network {{ invader32_network }}

    - name: Restart quagga
      command: service quagga restart


- hosts: leaf[1]
  become: true

  vars:
  - tmp_file_path: /tmp/failed.txt
  - log_dir_path: /var/log/regression/bgp

  tasks:
    - file:
        path: "{{ log_dir_path }}"
        state: directory

    - name: Verify ibgp router advertise
      test_bgp:
        switch_name: "{{ inventory_hostname }}"
        testcase_name: "peering_ibgp_route_advertise_006"
        neighbor1_ip: "{{ invader32_neighbour_ip }}"
        neighbor2_ip: "{{ invader31_bgp_ip }}"
        network2: "{{ invader30_network }}"
        network3: "{{ invader31_network }}"
        network4: "{{ invader32_network }}"
        log_dir_path: "{{ log_dir_path }}"
      register: leaf1_out

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ leaf1_out.hash_name }}"
        start_time: "{{ leaf1_out.start_time }}"
        end_time: "{{ leaf1_out.end_time }}"
        hash_dict: "{{ leaf1_out.hash_dict }}"
        test_result: "{{ leaf1_out.test_result }}"
      delegate_to: 127.0.0.1

    - lineinfile:
        path: "{{ tmp_file_path }}"
        line: "{{ leaf1_out.hash_name }}"
      when: leaf1_out.test_result == 'Failed'
      delegate_to: 127.0.0.1


- hosts: spine[0]
  become: true

  vars:
  - tmp_file_path: /tmp/failed.txt
  - log_dir_path: /var/log/regression/bgp

  tasks:
    - file:
        path: "{{ log_dir_path }}"
        state: directory

    - name: Verify ibgp router advertise
      test_bgp:
        switch_name: "{{ inventory_hostname }}"
        testcase_name: "peering_ibgp_route_advertise_006"
        neighbor1_ip: "{{ invader29_neighbour_ip }}"
        neighbor2_ip: "{{ invader30_bgp_ip }}"
        network1: "{{ invader29_network }}"
        network2: "{{ invader30_network }}"
        network3: "{{ invader31_network }}"
        log_dir_path: "{{ log_dir_path }}"
      register: spine0_out

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ spine0_out.hash_name }}"
        start_time: "{{ spine0_out.start_time }}"
        end_time: "{{ spine0_out.end_time }}"
        hash_dict: "{{ spine0_out.hash_dict }}"
        test_result: "{{ spine0_out.test_result }}"
      delegate_to: 127.0.0.1

    - lineinfile:
        path: "{{ tmp_file_path }}"
        line: "{{ spine0_out.hash_name }}"
      when: spine0_out.test_result == 'Failed'
      delegate_to: 127.0.0.1


- hosts: spine[1]
  become: true

  vars:
  - tmp_file_path: /tmp/failed.txt
  - log_dir_path: /var/log/regression/bgp

  tasks:
    - file:
        path: "{{ log_dir_path }}"
        state: directory

    - name: Verify ibgp router advertise
      test_bgp:
        switch_name: "{{ inventory_hostname }}"
        testcase_name: "peering_ibgp_route_advertise_006"
        neighbor1_ip: "{{ invader30_neighbour_ip }}"
        neighbor2_ip: "{{ invader29_bgp_ip }}"
        network1: "{{ invader29_network }}"
        network2: "{{ invader30_network }}"
        network4: "{{ invader32_network }}"
        log_dir_path: "{{ log_dir_path }}"
      register: spine1_out

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ spine1_out.hash_name }}"
        start_time: "{{ spine1_out.start_time }}"
        end_time: "{{ spine1_out.end_time }}"
        hash_dict: "{{ spine1_out.hash_dict }}"
        test_result: "{{ spine1_out.test_result }}"
      delegate_to: 127.0.0.1

    - lineinfile:
        path: "{{ tmp_file_path }}"
        line: "{{ spine1_out.hash_name }}"
      when: spine1_out.test_result == 'Failed'
      delegate_to: 127.0.0.1


- hosts: leaf[1]:spine
  become: true
  tasks:
    - name: Restore backup of Quagga.conf 
      copy:
        src: /etc/quagga/Quagga.conf.bck
        dest: /etc/quagga/Quagga.conf
        remote_src: true
        owner: root
        group: root
        mode: 0644

    - name: Remove backup file
      file:
        path: /etc/quagga/Quagga.conf.bck
        state: absent


- hosts: server_emulator
  become: yes

  vars:
  - tmp_file_path: /tmp/failed.txt

  tasks:
    - name: Report test suite result
      test_suite_result:
        result_data: "{{ lookup('file', '{{ tmp_file_path }}') }}"
      register: status

    - debug: var=status

    - file:
        path: "{{ tmp_file_path }}"
        state: absent
      changed_when: False

