---

- hosts: server_emulator
  become: true

  tasks:
    - command: "date +%Y%m%d%T"
      register: start_time

    - set_fact:
        hash_name: "docker_quagga_ospf_traffic_{{ start_time.stdout }}"
        start_time: "{{ start_time.stdout }}"


- hosts: leaf:spine
  become: true
  tasks:
    - name: Pull quagga container image from dockerhub
      command: "docker pull stigt/debian-quagga:latest"

    - name: Install docker compose
      shell: "curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose"

    - name: Make docker-compose file executable
      shell: "chmod +x /usr/local/bin/docker-compose"

    - file:
        path: "{{ docker_compose_file }}"
        state: touch

    - name: Create docker-compose file
      lineinfile:
        path: "{{ docker_compose_file }}"
        line: "{{ item }}"
      with_items:
      - "version: '3'"
      - "services:"

    - name: Add docker_move.sh
      copy:
        src: ../../templates/docker_move.sh
        dest: "~/docker_move.sh"      
        owner: root
        group: root
        mode: 0755


- hosts: spine[0]
  become: true
  tasks:
    - file:
        path: "~/volumes/quagga/{{ item }}"
        state: directory
      with_items:
      - R1
      - R2
      - R3
      - R4
      - R5
      - R6
      - R7
      - R8

    - name: Copy ospfd.conf and zebra.conf in respective containers
      include: copy_config_files.yml container={{ item }}
      with_items:
      - R1
      - R2
      - R3
      - R4
      - R5
      - R6
      - R7
      - R8

    - name: Add container info in docker-compose file
      include: update_docker_compose.yml container={{ item }}
      with_items:
      - R1
      - R2
      - R3
      - R4
      - R5
      - R6
      - R7
      - R8

    - name: Run docker-compose up
      shell: "docker-compose up -d"
      args:
        chdir: ~/

    - name: Bring up all containers
      docker_updown:
        config_file: "{{ lookup('file', '../../group_vars/{{ inventory_hostname }}/{{ item }}') }}"
        state: 'up'
      with_items:
      - R1
      - R2
      - R3
      - R4
      - R5
      - R6
      - R7
      - R8


- hosts: spine[1]
  become: true
  tasks:
    - file:
        path: "~/volumes/quagga/{{ item }}"
        state: directory
      with_items:
      - R9
      - R10
      - R11
      - R12
      - R13
      - R14
      - R15
      - R16

    - name: Copy ospfd.conf and zebra.conf in respective containers
      include: copy_config_files.yml container={{ item }}
      with_items:
      - R9
      - R10
      - R11
      - R12
      - R13
      - R14
      - R15
      - R16

    - name: Add container info in docker-compose file
      include: update_docker_compose.yml container={{ item }}
      with_items:
      - R9
      - R10
      - R11
      - R12
      - R13
      - R14
      - R15
      - R16

    - name: Run docker-compose up
      shell: "docker-compose up -d"
      args:
        chdir: ~/

    - name: Bring up all containers
      docker_updown:
        config_file: "{{ lookup('file', '../../group_vars/{{ inventory_hostname }}/{{ item }}') }}"
        state: 'up'
      with_items:
      - R9
      - R10
      - R11
      - R12
      - R13
      - R14
      - R15
      - R16


- hosts: leaf[0]
  become: true
  tasks:
    - file:
        path: "~/volumes/quagga/{{ item }}"
        state: directory
      with_items:
      - R17
      - R18
      - R19
      - R20
      - R21
      - R22
      - R23
      - R24

    - name: Copy ospfd.conf and zebra.conf in respective containers
      include: copy_config_files.yml container={{ item }}
      with_items:
      - R17
      - R18
      - R19
      - R20
      - R21
      - R22
      - R23
      - R24

    - name: Add container info in docker-compose file
      include: update_docker_compose.yml container={{ item }}
      with_items:
      - R17
      - R18
      - R19
      - R20
      - R21
      - R22
      - R23
      - R24

    - name: Run docker-compose up
      shell: "docker-compose up -d"
      args:
        chdir: ~/

    - name: Bring up all containers
      docker_updown:
        config_file: "{{ lookup('file', '../../group_vars/{{ inventory_hostname }}/{{ item }}') }}"
        state: 'up'
      with_items:
      - R17
      - R18
      - R19
      - R20
      - R21
      - R22
      - R23
      - R24


- hosts: leaf[1]
  become: true
  tasks:
    - file:
        path: "~/volumes/quagga/{{ item }}"
        state: directory
      with_items:
      - R25
      - R26
      - R27
      - R28
      - R29
      - R30
      - R31
      - R32

    - name: Copy ospfd.conf and zebra.conf in respective containers
      include: copy_config_files.yml container={{ item }}
      with_items:
      - R25
      - R26
      - R27
      - R28
      - R29
      - R30
      - R31
      - R32

    - name: Add container info in docker-compose file
      include: update_docker_compose.yml container={{ item }}
      with_items:
      - R25
      - R26
      - R27
      - R28
      - R29
      - R30
      - R31
      - R32

    - name: Run docker-compose up
      shell: "docker-compose up -d"
      args:
        chdir: ~/

    - name: Bring up all containers
      docker_updown:
        config_file: "{{ lookup('file', '../../group_vars/{{ inventory_hostname }}/{{ item }}') }}"
        state: 'up'
      with_items:
      - R25
      - R26
      - R27
      - R28
      - R29
      - R30
      - R31
      - R32


- hosts: spine[0]
  become: true

  vars:
  - container: R1
  - log_dir_path: /var/log/regression/docker

  tasks:
    - file:
        path: "{{ log_dir_path }}"
        state: directory

    - include_vars:
        file: ../../group_vars/{{ inventory_hostname }}/{{ container }}

    - name: Verify quagga ospf traffic inside R1 container
      test_docker_ospf:
        switch_name: "{{ inventory_hostname }}"     
        container: "{{ container }}"
        config_file: "{{ lookup('template', '../../templates/ospfd.conf.j2') }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ log_dir_path }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1

    - name: Bring down all containers
      docker_updown:
        config_file: "{{ lookup('file', '../../group_vars/{{ inventory_hostname }}/{{ item }}') }}"
        state: 'down'
      with_items:
      - R1
      - R2
      - R3
      - R4
      - R5
      - R6
      - R7
      - R8

    - name: Run docker-compose down
      shell: "docker-compose down"
      args:
        chdir: ~/


- hosts: spine[1]
  become: true
  tasks:
    - name: Bring down all containers
      docker_updown:
        config_file: "{{ lookup('file', '../../group_vars/{{ inventory_hostname }}/{{ item }}') }}"
        state: 'down'
      with_items:
      - R9
      - R10
      - R11
      - R12
      - R13
      - R14
      - R15
      - R16

    - name: Run docker-compose down
      shell: "docker-compose down"
      args:
        chdir: ~/


- hosts: leaf[0]
  become: true
  tasks:
    - name: Bring down all containers
      docker_updown:
        config_file: "{{ lookup('file', '../../group_vars/{{ inventory_hostname }}/{{ item }}') }}"
        state: 'down'
      with_items:
      - R17
      - R18
      - R19
      - R20
      - R21
      - R22
      - R23
      - R24

    - name: Run docker-compose down
      shell: "docker-compose down"
      args:
        chdir: ~/


- hosts: leaf[1]
  become: true
  tasks:
    - name: Bring down all containers
      docker_updown:
        config_file: "{{ lookup('file', '../../group_vars/{{ inventory_hostname }}/{{ item }}') }}"
        state: 'down'
      with_items:
      - R25
      - R26
      - R27
      - R28
      - R29
      - R30
      - R31
      - R32

    - name: Run docker-compose down
      shell: "docker-compose down"
      args:
        chdir: ~/


- hosts: leaf:spine
  become: true
  tasks:
    - name: Restart goes
      command: "goes restart"

    - shell: "goes hget platina package | grep version:"
      register: version_out

    - shell: "goes hget platina package | grep tag:"
      register: tag_out

    - name: Store GOES version and tag details in redis db
      store_goes_details:
        switch_name: "{{ inventory_hostname }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        version_details: "{{ version_out.stdout }}"
        tag_details: "{{ tag_out.stdout }}"
      delegate_to: 127.0.0.1


- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result

    - debug:
        msg: "Test case result: {{ result.result_status }}"

    - debug:
        msg: "Failure summary: {{ result.result_detail }}"

    - name: Get playbook run details
      set_fact:
        playbook_run: "{{ lookup('file', '{{ ansible_log_file_path }}') }}"

    - name: Store the ansible execution log in redis hash
      command: "redis-cli -p 9090 hset {{ hostvars['server_emulator']['hash_name'] }} 'result.playbook' '{{ playbook_run }}'"

    - file:
        path: "{{ ansible_log_file_path }}"
        state: absent
