---

- hosts: server_emulator
  become: true

  tasks:
    - command: "date +%Y%m%d%T"
      register: start_time

    - set_fact:
        hash_name: "ipv4_routes_scale_{{ start_time.stdout }}"
        start_time: "{{ start_time.stdout }}"


- hosts: leaf[1]:spine[0]
  become: true

  vars:
  - log_dir_path: /var/log/regression/ipv4

  tasks:
    - file:
        path: "{{ log_dir_path }}"
        state: directory

    - name: Verify ipv4 routes scale
      test_ipv4_routes_scale:
        switch_name: "{{ inventory_hostname }}"
        leaf_list: "{{ groups['leaf'] }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ log_dir_path }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
      delegate_to: 127.0.0.1

    - shell: "goes hget platina package | grep version:"
      register: version_out

    - shell: "goes hget platina package | grep tag:"
      register: tag_out

    - name: Store GOES version and tag details in redis db
      store_goes_details:
        switch_name: "{{ inventory_hostname }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        version_details: "{{ version_out.stdout }}"
        tag_details: "{{ tag_out.stdout }}"
      delegate_to: 127.0.0.1


- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result

    - debug:
        msg: "Test case result: {{ result.result_status }}"

    - debug:
        msg: "Failure summary: {{ result.result_detail }}"
